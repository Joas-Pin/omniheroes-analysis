[1,0,0,[["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,4]],[[0,"icon-cut-edge",[{"hash":1397288800,"record":null,"name":"icon-cut-edge|vs|fs","glsl3":{"vert":"\nprecision lowp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision lowp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Constant {\n  float u_cutAngle_one;\n  float u_cutAngle_two;\n  float u_cutAngle_three;\n  float u_cutAngle_four;\n  float u_cutPos_one;\n  float u_cutPos_two;\n  float u_cutPos_three;\n  float u_cutPos_four;\n  float u_cutWidth;\n};\nvoid main () {\n  #if USE_TEXTURE\n    vec4 finalColor = texture(texture, v_uv0);\n  #else\n    vec4 finalColor = vec4(1.0);\n  #endif\n  finalColor *= v_color;\n  ALPHA_TEST(finalColor);\n  #if CUT_RIGHT_DOWN || CUT_RIGHT_UP || CUT_LEFT_DOWN || CUT_LEFT_UP\n    float newY = 1.0 - v_uv0.y;\n    #if CUT_RIGHT_DOWN\n      float v1 = step(u_cutWidth, abs(v_uv0.x - (newY * u_cutAngle_one + u_cutPos_one)));\n    #else\n      float v1 = 1.0;\n    #endif\n    #if CUT_LEFT_UP\n      float v2 = step(u_cutWidth, abs(v_uv0.x - (newY * u_cutAngle_two - u_cutPos_two)));\n    #else\n      float v2 = 1.0;\n    #endif\n    #if CUT_RIGHT_UP\n      float v3 = step(u_cutWidth, abs(v_uv0.x - (v_uv0.y * u_cutAngle_three + u_cutPos_three)));\n    #else\n      float v3 = 1.0;\n    #endif\n    #if CUT_LEFT_DOWN\n      float v4 = step(u_cutWidth, abs(v_uv0.x - (v_uv0.y * u_cutAngle_four - u_cutPos_four)));\n    #else\n      float v4 = 1.0;\n    #endif\n    float alpha_one = 1.0 - step(v1 + v2, 1.0);\n    float alpha_two = 1.0 - step(v3 + v4, 1.0);\n    float alpha = 1.0 - step(alpha_one + alpha_two, 1.0);\n    finalColor *= alpha;\n  #endif\n  gl_FragColor = finalColor;\n}"},"glsl1":{"vert":"\nprecision lowp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision lowp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform float u_cutAngle_one;\nuniform float u_cutAngle_two;\nuniform float u_cutAngle_three;\nuniform float u_cutAngle_four;\nuniform float u_cutPos_one;\nuniform float u_cutPos_two;\nuniform float u_cutPos_three;\nuniform float u_cutPos_four;\nuniform float u_cutWidth;\nvoid main () {\n  #if USE_TEXTURE\n    vec4 finalColor = texture2D(texture, v_uv0);\n  #else\n    vec4 finalColor = vec4(1.0);\n  #endif\n  finalColor *= v_color;\n  ALPHA_TEST(finalColor);\n  #if CUT_RIGHT_DOWN || CUT_RIGHT_UP || CUT_LEFT_DOWN || CUT_LEFT_UP\n    float newY = 1.0 - v_uv0.y;\n    #if CUT_RIGHT_DOWN\n      float v1 = step(u_cutWidth, abs(v_uv0.x - (newY * u_cutAngle_one + u_cutPos_one)));\n    #else\n      float v1 = 1.0;\n    #endif\n    #if CUT_LEFT_UP\n      float v2 = step(u_cutWidth, abs(v_uv0.x - (newY * u_cutAngle_two - u_cutPos_two)));\n    #else\n      float v2 = 1.0;\n    #endif\n    #if CUT_RIGHT_UP\n      float v3 = step(u_cutWidth, abs(v_uv0.x - (v_uv0.y * u_cutAngle_three + u_cutPos_three)));\n    #else\n      float v3 = 1.0;\n    #endif\n    #if CUT_LEFT_DOWN\n      float v4 = step(u_cutWidth, abs(v_uv0.x - (v_uv0.y * u_cutAngle_four - u_cutPos_four)));\n    #else\n      float v4 = 1.0;\n    #endif\n    float alpha_one = 1.0 - step(v1 + v2, 1.0);\n    float alpha_two = 1.0 - step(v3 + v4, 1.0);\n    float alpha = 1.0 - step(alpha_one + alpha_two, 1.0);\n    finalColor *= alpha;\n  #endif\n  gl_FragColor = finalColor;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CUT_RIGHT_DOWN","type":"boolean","defines":[]},{"name":"CUT_LEFT_UP","type":"boolean","defines":[]},{"name":"CUT_RIGHT_UP","type":"boolean","defines":[]},{"name":"CUT_LEFT_DOWN","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","binding":1,"members":[{"name":"u_cutAngle_one","type":13,"count":1},{"name":"u_cutAngle_two","type":13,"count":1},{"name":"u_cutAngle_three","type":13,"count":1},{"name":"u_cutAngle_four","type":13,"count":1},{"name":"u_cutPos_one","type":13,"count":1},{"name":"u_cutPos_two","type":13,"count":1},{"name":"u_cutPos_three","type":13,"count":1},{"name":"u_cutPos_four","type":13,"count":1},{"name":"u_cutWidth","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"icon-cut-edge|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.15]},"u_cutAngle_one":{"type":13,"value":[2]},"u_cutAngle_two":{"type":13,"value":[2]},"u_cutAngle_three":{"type":13,"value":[2]},"u_cutAngle_four":{"type":13,"value":[2]},"u_cutPos_one":{"type":13,"value":[0.88]},"u_cutPos_two":{"type":13,"value":[1.92]},"u_cutPos_three":{"type":13,"value":[0.92]},"u_cutPos_four":{"type":13,"value":[1.88]},"u_cutWidth":{"type":13,"value":[0.4]}}}]}]]],0,0,[],[],[]]