[1,0,0,[["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,4]],[[0,"circle-corner",[{"hash":1532759439,"record":null,"name":"circle-corner|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform STEP {\n  float setOffsetX;\n  float setOffsetY;\n};\n#endif\nvoid main () {\n  float dis = 0.0;\n  if(v_uv0.x < setOffsetX)\n  {\n    if(v_uv0.y < setOffsetY)\n    {\n      dis = distance(v_uv0, vec2(setOffsetX, setOffsetY));\n    }\n    if(v_uv0.y > (1.0 - setOffsetY))\n    {\n      dis = distance(v_uv0, vec2(setOffsetX, (1.0 - setOffsetY)));\n    }\n  }\n  else if ( v_uv0.x > (1.0 - setOffsetX) )\n  {\n    if ( v_uv0.y < setOffsetY )\n    {\n      dis = distance( v_uv0, vec2((1.0 - setOffsetX), setOffsetY ) );\n    }\n    if ( v_uv0.y > (1.0 - setOffsetY) )\n    {\n      dis = distance( v_uv0, vec2((1.0 - setOffsetX), (1.0 - setOffsetY) ) );\n    }\n  }\n  if(dis > 0.001)\n  {\n    float edge = setOffsetX;\n    if(edge < setOffsetY){\n      edge = setOffsetY;\n    }\n    float gap = edge*0.0001 ;\n    if(dis <= edge - gap)\n    {\n      gl_FragColor = v_color * texture(texture, v_uv0);\n    }\n    else if(dis <= edge)\n    {\n      float t = smoothstep(0.0, gap, edge-dis);\n      vec4 color = v_color * texture(texture, v_uv0);\n      gl_FragColor = vec4(color.rgb, t);\n    }\n    else\n    {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n  }\n  else\n  {\n    gl_FragColor = v_color * texture(texture, v_uv0);\n  }\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float setOffsetX;\nuniform float setOffsetY;\n#endif\nvoid main () {\n  float dis = 0.0;\n  if(v_uv0.x < setOffsetX)\n  {\n    if(v_uv0.y < setOffsetY)\n    {\n      dis = distance(v_uv0, vec2(setOffsetX, setOffsetY));\n    }\n    if(v_uv0.y > (1.0 - setOffsetY))\n    {\n      dis = distance(v_uv0, vec2(setOffsetX, (1.0 - setOffsetY)));\n    }\n  }\n  else if ( v_uv0.x > (1.0 - setOffsetX) )\n  {\n    if ( v_uv0.y < setOffsetY )\n    {\n      dis = distance( v_uv0, vec2((1.0 - setOffsetX), setOffsetY ) );\n    }\n    if ( v_uv0.y > (1.0 - setOffsetY) )\n    {\n      dis = distance( v_uv0, vec2((1.0 - setOffsetX), (1.0 - setOffsetY) ) );\n    }\n  }\n  if(dis > 0.001)\n  {\n    float edge = setOffsetX;\n    if(edge < setOffsetY){\n      edge = setOffsetY;\n    }\n    float gap = edge*0.0001 ;\n    if(dis <= edge - gap)\n    {\n      gl_FragColor = v_color * texture2D(texture, v_uv0);\n    }\n    else if(dis <= edge)\n    {\n      float t = smoothstep(0.0, gap, edge-dis);\n      vec4 color = v_color * texture2D(texture, v_uv0);\n      gl_FragColor = vec4(color.rgb, t);\n    }\n    else\n    {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n  }\n  else\n  {\n    gl_FragColor = v_color * texture2D(texture, v_uv0);\n  }\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"STEP","binding":1,"members":[{"name":"setOffsetX","type":13,"count":1},{"name":"setOffsetY","type":13,"count":1}],"defines":["USE_TEXTURE"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"circle-corner|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"setOffsetX":{"type":13,"value":[0.1]},"setOffsetY":{"type":13,"value":[0.1]}}}]}]]],0,0,[],[],[]]