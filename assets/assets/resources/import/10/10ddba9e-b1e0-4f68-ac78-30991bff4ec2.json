[1,0,0,[["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,4]],[[0,"vertical-blur",[{"hash":316849664,"record":null,"name":"vertical-blur|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Constant {\n    float u_sigma;\n    float u_stepY;\n};\nfloat GaussWeight2D(float x, float y)\n{\n    const float PI = 3.14159265358;\n    const float E = 2.71828182846;\n    float sigma_2 = pow(u_sigma, 2.0);\n    float a = -(x*x + y*y) / (2.0 * sigma_2);\n    return pow(E, a) / (2.0 * PI * sigma_2);\n}\nvoid main() {\n  vec3 finalColor = vec3(0.0);\n  float w = 0.0;\n  for (float y = -30.0; y < 30.0; y++) {\n      vec2 coord = v_uv0 + vec2(0.0, u_stepY * y);\n      float tw = GaussWeight2D(0.0, y);\n      vec3 color = texture(texture, coord).rgb;\n      finalColor += color * tw;\n      w += tw;\n  }\n  finalColor /= w;\n  gl_FragColor = vec4(finalColor, 1.0);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform float u_sigma;\nuniform float u_stepY;\nfloat GaussWeight2D(float x, float y)\n{\n    const float PI = 3.14159265358;\n    const float E = 2.71828182846;\n    float sigma_2 = pow(u_sigma, 2.0);\n    float a = -(x*x + y*y) / (2.0 * sigma_2);\n    return pow(E, a) / (2.0 * PI * sigma_2);\n}\nvoid main() {\n  vec3 finalColor = vec3(0.0);\n  float w = 0.0;\n  for (float y = -30.0; y < 30.0; y++) {\n      vec2 coord = v_uv0 + vec2(0.0, u_stepY * y);\n      float tw = GaussWeight2D(0.0, y);\n      vec3 color = texture2D(texture, coord).rgb;\n      finalColor += color * tw;\n      w += tw;\n  }\n  finalColor /= w;\n  gl_FragColor = vec4(finalColor, 1.0);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","binding":1,"members":[{"name":"u_sigma","type":13,"count":1},{"name":"u_stepY","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"vertical-blur|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"u_sigma":{"type":13,"value":[7],"inspector":{"tooltip":"sigma"}},"u_stepY":{"type":13,"value":[7],"inspector":{"tooltip":"stepX"}}}}]}]]],0,0,[],[],[]]