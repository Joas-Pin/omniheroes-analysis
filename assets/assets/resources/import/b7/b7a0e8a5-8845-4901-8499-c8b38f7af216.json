[1,0,0,[["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,4]],[[0,"wave-one",[{"hash":404535007,"record":null,"name":"wave-one|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Constant {\n  float u_centerX;\n  float u_centerY;\n  float u_textureWidth;\n  float u_textureHeight;\n  float u_force;\n  float u_size;\n  float u_circleWidth;\n  float u_waveNum;\n};\n  float pDist()\n  {\n      vec2 center = vec2(u_centerX / u_textureWidth, 1. - u_centerY / u_textureHeight);\n      vec2 vec = vec2((center.x - v_uv0.x) * (u_textureWidth / u_textureHeight), center.y - v_uv0.y);\n      return sqrt(vec.x * vec.x + vec.y * vec.y);\n  }\n  void main(void) {\n      vec2 center = 1. / vec2(u_textureWidth, u_textureHeight) * vec2(u_centerX, u_centerY);\n      center.y = 1.0 - center.y;\n      float originDist = pDist();\n      float dist = fract((originDist - u_size) * u_waveNum);\n      float mask = smoothstep((0.5 - u_circleWidth) * dist, 0.5, dist) - smoothstep(0.5, (0.5 + u_circleWidth), dist);\n      mask *= (1.0 - originDist);\n      #if REDUCE_BY_DISTANCE\n        mask = smoothstep(0.3, 1.0, mask);\n      #endif\n      vec2 desp = normalize(v_uv0 - center) * u_force * mask;\n      gl_FragColor = texture(texture, v_uv0 + desp) * v_color;\n  }"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform float u_centerX;\nuniform float u_centerY;\nuniform float u_textureWidth;\nuniform float u_textureHeight;\nuniform float u_force;\nuniform float u_size;\nuniform float u_circleWidth;\nuniform float u_waveNum;\n  float pDist()\n  {\n      vec2 center = vec2(u_centerX / u_textureWidth, 1. - u_centerY / u_textureHeight);\n      vec2 vec = vec2((center.x - v_uv0.x) * (u_textureWidth / u_textureHeight), center.y - v_uv0.y);\n      return sqrt(vec.x * vec.x + vec.y * vec.y);\n  }\n  void main(void) {\n      vec2 center = 1. / vec2(u_textureWidth, u_textureHeight) * vec2(u_centerX, u_centerY);\n      center.y = 1.0 - center.y;\n      float originDist = pDist();\n      float dist = fract((originDist - u_size) * u_waveNum);\n      float mask = smoothstep((0.5 - u_circleWidth) * dist, 0.5, dist) - smoothstep(0.5, (0.5 + u_circleWidth), dist);\n      mask *= (1.0 - originDist);\n      #if REDUCE_BY_DISTANCE\n        mask = smoothstep(0.3, 1.0, mask);\n      #endif\n      vec2 desp = normalize(v_uv0 - center) * u_force * mask;\n      gl_FragColor = texture2D(texture, v_uv0 + desp) * v_color;\n  }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"REDUCE_BY_DISTANCE","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","binding":1,"members":[{"name":"u_centerX","type":13,"count":1},{"name":"u_centerY","type":13,"count":1},{"name":"u_textureWidth","type":13,"count":1},{"name":"u_textureHeight","type":13,"count":1},{"name":"u_force","type":13,"count":1},{"name":"u_size","type":13,"count":1},{"name":"u_circleWidth","type":13,"count":1},{"name":"u_waveNum","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"wave-one|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"u_centerX":{"type":13,"value":[0.5],"inspector":{"tooltip":"中心像素点x"}},"u_centerY":{"type":13,"value":[0.5],"inspector":{"tooltip":"中心像素点y"}},"u_textureWidth":{"type":13,"value":[0.5],"inspector":{"tooltip":"图片宽度"}},"u_textureHeight":{"type":13,"value":[0.5],"inspector":{"tooltip":"图片高度"}},"u_force":{"type":13,"value":[0.1],"inspector":{"tooltip":"扭曲力度"}},"u_size":{"type":13,"value":[0],"inspector":{"tooltip":"波纹时间(随时间增加)"}},"u_circleWidth":{"type":13,"value":[0.1],"inspector":{"tooltip":"波纹宽度"}},"u_waveNum":{"type":13,"value":[2],"inspector":{"tooltip":"波纹密度"}}}}]}]]],0,0,[],[],[]]